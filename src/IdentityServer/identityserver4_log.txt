2019-05-29 20:45:33.901 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-29 20:45:33.939 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-29 20:45:33.941 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-29 20:45:33.941 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-29 20:45:33.942 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-29 20:45:33.942 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-29 20:45:33.942 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-29 20:45:34.503 -07:00 [DBG] Login Url: Account/Login
2019-05-29 20:45:34.505 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-29 20:45:34.505 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-29 20:45:34.505 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-29 20:45:34.505 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-29 20:45:34.505 -07:00 [DBG] Error Url: /home/error
2019-05-29 20:45:34.505 -07:00 [DBG] Error Id Parameter: errorId
2019-05-29 20:45:44.998 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-29 20:45:45.001 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-29 20:45:45.001 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-29 20:45:45.003 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-29 20:45:45.007 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-29 20:45:45.007 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-29 20:45:45.012 -07:00 [DBG] Start discovery request
2019-05-29 20:45:45.064 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-29 20:45:45.069 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-29 20:45:45.069 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-29 20:45:45.073 -07:00 [DBG] Start authorize request
2019-05-29 20:45:45.082 -07:00 [DBG] No user present in authorize request
2019-05-29 20:45:45.087 -07:00 [DBG] Start authorize request protocol validation
2019-05-29 20:45:45.110 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-29 20:45:45.116 -07:00 [DBG] Checking for PKCE parameters
2019-05-29 20:45:45.149 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-29 20:45:45.166 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"715a21b2d9ed4a8499223e676fe1e254","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"715a21b2d9ed4a8499223e676fe1e254","code_challenge":"yKfWPKIEwfkdI7vhIKfdLMb9imyZaEztmxfPeAWJoAk","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-29 20:45:45.189 -07:00 [INF] Showing login: User is not authenticated
2019-05-29 20:53:52.671 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-29 20:53:52.710 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-29 20:53:52.713 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-29 20:53:52.713 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-29 20:53:52.714 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-29 20:53:52.714 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-29 20:53:52.714 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-29 20:53:53.230 -07:00 [DBG] Login Url: Account/Login
2019-05-29 20:53:53.232 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-29 20:53:53.233 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-29 20:53:53.233 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-29 20:53:53.233 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-29 20:53:53.233 -07:00 [DBG] Error Url: /home/error
2019-05-29 20:53:53.233 -07:00 [DBG] Error Id Parameter: errorId
2019-05-29 20:54:01.266 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-29 20:54:01.269 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-29 20:54:01.269 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-29 20:54:01.271 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-29 20:54:01.275 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-29 20:54:01.277 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-29 20:54:01.283 -07:00 [DBG] Start discovery request
2019-05-29 20:54:01.333 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-29 20:54:01.338 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-29 20:54:01.338 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-29 20:54:01.341 -07:00 [DBG] Start authorize request
2019-05-29 20:54:01.350 -07:00 [DBG] No user present in authorize request
2019-05-29 20:54:01.354 -07:00 [DBG] Start authorize request protocol validation
2019-05-29 20:54:01.374 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-29 20:54:01.380 -07:00 [DBG] Checking for PKCE parameters
2019-05-29 20:54:01.409 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-29 20:54:01.425 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"326c5f60ce744803b11fe671f6e17bc5","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"326c5f60ce744803b11fe671f6e17bc5","code_challenge":"Dt4GA5JLFK5NtJXsmj6a_FKSN2CX0dzhp7zEupCqYgU","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-29 20:54:01.448 -07:00 [INF] Showing login: User is not authenticated
2019-05-29 21:07:24.531 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-29 21:07:24.584 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-29 21:07:24.587 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-29 21:07:24.587 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-29 21:07:24.587 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-29 21:07:24.587 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-29 21:07:24.587 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-29 21:07:25.017 -07:00 [DBG] Login Url: Account/Login
2019-05-29 21:07:25.020 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-29 21:07:25.020 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-29 21:07:25.020 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-29 21:07:25.020 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-29 21:07:25.020 -07:00 [DBG] Error Url: /home/error
2019-05-29 21:07:25.020 -07:00 [DBG] Error Id Parameter: errorId
2019-05-29 21:07:37.946 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-29 21:07:37.950 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-29 21:07:37.950 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-29 21:07:37.951 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-29 21:07:37.954 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-29 21:07:37.955 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-29 21:07:37.960 -07:00 [DBG] Start discovery request
2019-05-29 21:07:38.046 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-29 21:07:38.051 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-29 21:07:38.051 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-29 21:07:38.054 -07:00 [DBG] Start authorize request
2019-05-29 21:07:38.063 -07:00 [DBG] No user present in authorize request
2019-05-29 21:07:38.068 -07:00 [DBG] Start authorize request protocol validation
2019-05-29 21:07:38.089 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-29 21:07:38.093 -07:00 [DBG] Checking for PKCE parameters
2019-05-29 21:07:38.125 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-29 21:07:38.142 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"064bd9d52c8645c0b191b39520c61b61","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"064bd9d52c8645c0b191b39520c61b61","code_challenge":"qtN1CevMwssKmktb_vFjObaZTQV5jMdMJ4JM3RDWew4","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-29 21:07:38.164 -07:00 [INF] Showing login: User is not authenticated
2019-05-29 21:09:15.077 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-29 21:09:15.125 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-29 21:09:15.128 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-29 21:09:15.128 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-29 21:09:15.128 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-29 21:09:15.128 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-29 21:09:15.128 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-29 21:09:15.557 -07:00 [DBG] Login Url: /Account/Login
2019-05-29 21:09:15.560 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-29 21:09:15.560 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-29 21:09:15.560 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-29 21:09:15.560 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-29 21:09:15.560 -07:00 [DBG] Error Url: /home/error
2019-05-29 21:09:15.560 -07:00 [DBG] Error Id Parameter: errorId
2019-05-29 21:09:32.551 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-29 21:09:32.555 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-29 21:09:32.555 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-29 21:09:32.558 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-29 21:09:32.562 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-29 21:09:32.562 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-29 21:09:32.567 -07:00 [DBG] Start discovery request
2019-05-29 21:09:32.633 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-29 21:09:32.643 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-29 21:09:32.643 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-29 21:09:32.647 -07:00 [DBG] Start authorize request
2019-05-29 21:09:32.656 -07:00 [DBG] No user present in authorize request
2019-05-29 21:09:32.663 -07:00 [DBG] Start authorize request protocol validation
2019-05-29 21:09:32.682 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-29 21:09:32.690 -07:00 [DBG] Checking for PKCE parameters
2019-05-29 21:09:32.856 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-29 21:09:32.875 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b576de5869f84bc3b8637ffb910062b1","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"b576de5869f84bc3b8637ffb910062b1","code_challenge":"zv6OJ60I8hlhgLGrO8yusVv-RDvu-G__GpGMPOYbBOc","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-29 21:09:32.900 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 00:44:57.247 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 00:44:57.340 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 00:44:57.343 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 00:44:57.343 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 00:44:57.343 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 00:44:57.343 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 00:44:57.343 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 00:44:58.976 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 00:44:58.979 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 00:44:58.979 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 00:44:58.979 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 00:44:58.979 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 00:44:58.979 -07:00 [DBG] Error Url: /home/error
2019-05-30 00:44:58.979 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 00:45:25.924 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 00:45:26.288 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 00:45:26.289 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 00:45:26.291 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 00:45:26.296 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 00:45:26.296 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 00:45:26.303 -07:00 [DBG] Start discovery request
2019-05-30 00:45:27.074 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 00:45:27.080 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 00:45:27.080 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 00:45:27.094 -07:00 [DBG] Start authorize request
2019-05-30 00:45:27.145 -07:00 [DBG] No user present in authorize request
2019-05-30 00:45:27.155 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 00:45:27.178 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 00:45:27.184 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 00:45:27.216 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 00:45:27.313 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"31bcdae4269b428cb3f7ed3287af0c97","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"31bcdae4269b428cb3f7ed3287af0c97","code_challenge":"C1E4fuyWLeE8Dc5FVVhqx611215W7tnJrgyogM72l6w","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 00:45:27.341 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 00:45:28.423 -07:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null.
Parameter name: logger
   at Microsoft.Extensions.Logging.LoggerExtensions.Log(ILogger logger, LogLevel logLevel, EventId eventId, Exception exception, String message, Object[] args)
   at Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(ILogger logger, String message, Object[] args)
   at IdentityServer.UI.Controllers.Account.AccountController.Login(String returnUrl) in C:\Users\Satoshi\source\repos\idp_auth_pkce\src\IdentityServer\UI\Controllers\Account\AccountController.cs:line 49
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-05-30 00:48:09.318 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 00:48:09.389 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 00:48:09.392 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 00:48:09.392 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 00:48:09.392 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 00:48:09.392 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 00:48:09.392 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 00:48:09.880 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 00:48:09.882 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 00:48:09.882 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 00:48:09.882 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 00:48:09.882 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 00:48:09.883 -07:00 [DBG] Error Url: /home/error
2019-05-30 00:48:09.884 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 00:48:36.670 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 00:48:36.673 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 00:48:36.673 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 00:48:36.675 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 00:48:36.681 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 00:48:36.682 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 00:48:36.687 -07:00 [DBG] Start discovery request
2019-05-30 00:48:36.862 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 00:48:36.867 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 00:48:36.867 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 00:48:36.871 -07:00 [DBG] Start authorize request
2019-05-30 00:48:36.882 -07:00 [DBG] No user present in authorize request
2019-05-30 00:48:36.887 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 00:48:36.906 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 00:48:36.911 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 00:48:36.950 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 00:48:36.974 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"2527f1d57c9a4b92afd03375ee5d2fe2","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"2527f1d57c9a4b92afd03375ee5d2fe2","code_challenge":"DN1H-mzmA9Pg1hg64QoZeFE_9wMpJQe5M2PVcDolqig","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 00:48:36.999 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 00:48:37.035 -07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Unable to resolve service for type 'Microsoft.Extensions.Logging.ILogger' while attempting to activate 'IdentityServer.UI.Controllers.Account.AccountController'.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)
   at lambda_method(Closure , IServiceProvider , Object[] )
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-05-30 00:54:09.548 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 00:54:09.598 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 00:54:09.602 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 00:54:09.602 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 00:54:09.602 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 00:54:09.602 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 00:54:09.602 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 00:54:10.126 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 00:54:10.129 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 00:54:10.129 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 00:54:10.129 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 00:54:10.129 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 00:54:10.129 -07:00 [DBG] Error Url: /home/error
2019-05-30 00:54:10.129 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 00:54:23.613 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 00:54:23.616 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 00:54:23.616 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 00:54:23.618 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 00:54:23.627 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 00:54:23.627 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 00:54:23.630 -07:00 [DBG] Start discovery request
2019-05-30 00:54:23.685 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 00:54:23.690 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 00:54:23.690 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 00:54:23.693 -07:00 [DBG] Start authorize request
2019-05-30 00:54:23.702 -07:00 [DBG] No user present in authorize request
2019-05-30 00:54:23.708 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 00:54:23.727 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 00:54:23.735 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 00:54:23.770 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 00:54:23.788 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"bf919597c8c44d72ab624fd041a002d5","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"bf919597c8c44d72ab624fd041a002d5","code_challenge":"AmbY5ZVS0znpASlYH18d7ezqq1RbHwlP-w5uru63z_A","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 00:54:23.814 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 00:54:23.839 -07:00 [INF] Client reached /Account/Login (GET) to get himself authorized
2019-05-30 00:54:23.840 -07:00 [INF] Prepare View... (LoginViewModel)
2019-05-30 00:54:23.875 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 00:54:23.875 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 00:54:23.875 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 00:54:23.876 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 00:54:23.878 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 00:54:23.879 -07:00 [INF] Return Login View for user credential from /Account/Login (GET)
2019-05-30 16:46:37.765 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 16:46:37.925 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 16:46:37.929 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 16:46:37.929 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 16:46:37.930 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 16:46:37.930 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 16:46:37.930 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 16:46:41.028 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 16:46:41.031 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 16:46:41.031 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 16:46:41.031 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 16:46:41.031 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 16:46:41.031 -07:00 [DBG] Error Url: /home/error
2019-05-30 16:46:41.031 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 16:47:51.009 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 16:47:51.068 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 16:47:51.068 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 16:47:51.069 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 16:47:51.073 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 16:47:51.074 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 16:47:51.077 -07:00 [DBG] Start discovery request
2019-05-30 16:47:51.237 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 16:47:51.243 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 16:47:51.243 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 16:47:51.247 -07:00 [DBG] Start authorize request
2019-05-30 16:47:51.284 -07:00 [DBG] No user present in authorize request
2019-05-30 16:47:51.299 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 16:47:51.327 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 16:47:51.333 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 16:47:51.364 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 16:47:51.380 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"2993fcb056c5499f95510b9a505cf000","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"2993fcb056c5499f95510b9a505cf000","code_challenge":"M2oru_sEwJXqY7ttVWPdhv-NG3x9pl5TligGJMny9EM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 16:47:51.413 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 16:47:51.475 -07:00 [INF] Client reached /Account/Login (GET) to get himself authorized
2019-05-30 16:47:51.475 -07:00 [INF] Prepare View... (LoginViewModel)
2019-05-30 16:47:51.499 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 16:47:51.499 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 16:47:51.499 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 16:47:51.500 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 16:47:51.502 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 16:47:51.504 -07:00 [INF] Return Login View for user credential from /Account/Login (GET)
2019-05-30 16:48:18.642 -07:00 [INF] Client reached /Account/Login (GET) to get himself authorized
2019-05-30 16:48:18.642 -07:00 [INF] Prepare View... (LoginViewModel)
2019-05-30 16:48:18.643 -07:00 [INF] Return Login View for user credential from /Account/Login (GET)
2019-05-30 16:48:31.465 -07:00 [INF] Client reached /Account/Login (GET) to get himself authorized
2019-05-30 16:48:31.465 -07:00 [INF] Prepare View... (LoginViewModel)
2019-05-30 16:48:31.465 -07:00 [INF] Return Login View for user credential from /Account/Login (GET)
2019-05-30 16:48:36.495 -07:00 [INF] Client reached /Account/Login (GET) to get himself authorized
2019-05-30 16:48:36.495 -07:00 [INF] Prepare View... (LoginViewModel)
2019-05-30 16:48:36.495 -07:00 [INF] Return Login View for user credential from /Account/Login (GET)
2019-05-30 18:06:54.962 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:06:55.056 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:06:55.059 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:06:55.059 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:06:55.060 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:06:55.060 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:06:55.060 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:06:56.349 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:06:56.353 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:06:56.353 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:06:56.353 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:06:56.353 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:06:56.353 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:06:56.353 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:07:13.532 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 18:07:13.678 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 18:07:13.678 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 18:07:13.680 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 18:07:13.743 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 18:07:13.743 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 18:07:13.747 -07:00 [DBG] Start discovery request
2019-05-30 18:07:13.869 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 18:07:13.873 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 18:07:13.874 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 18:07:13.877 -07:00 [DBG] Start authorize request
2019-05-30 18:07:13.907 -07:00 [DBG] No user present in authorize request
2019-05-30 18:07:13.934 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:07:13.952 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:07:13.959 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:07:13.989 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:07:14.006 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"4e76c0223c764851a466a4247bd14973","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"4e76c0223c764851a466a4247bd14973","code_challenge":"V5L_vnHbytLIT6QLDCztlciDEPJb-9wSb7SblU45vEM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 18:07:14.040 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 18:07:14.111 -07:00 [INF] Receive request from Authorization endpoint
2019-05-30 18:07:14.134 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:07:14.134 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:07:14.134 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:07:14.134 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:07:14.137 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:08:20.639 -07:00 [INF] Receive request from Authorization endpoint
2019-05-30 18:09:36.306 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:09:36.344 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:09:36.347 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:09:36.347 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:09:36.347 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:09:36.347 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:09:36.348 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:09:36.981 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:09:36.985 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:09:36.985 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:09:36.985 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:09:36.985 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:09:36.985 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:09:36.985 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:15:36.149 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:15:36.185 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:15:36.189 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:15:36.189 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:15:36.189 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:15:36.189 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:15:36.189 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:15:36.705 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:15:36.708 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:15:36.708 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:15:36.708 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:15:36.708 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:15:36.708 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:15:36.708 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:16:27.027 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:16:27.067 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:16:27.070 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:16:27.070 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:16:27.070 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:16:27.070 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:16:27.070 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:16:27.528 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:16:27.530 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:16:27.530 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:16:27.530 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:16:27.530 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:16:27.531 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:16:27.531 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:24:48.042 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:24:48.078 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:24:48.081 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:24:48.081 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:24:48.081 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:24:48.081 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:24:48.081 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:24:48.430 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:24:48.432 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:24:48.432 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:24:48.432 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:24:48.432 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:24:48.432 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:24:48.432 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:28:58.174 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:28:58.220 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:28:58.229 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:28:58.229 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:28:58.229 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:28:58.229 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:28:58.229 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:28:58.795 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:28:58.797 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:28:58.797 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:28:58.797 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:28:58.797 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:28:58.797 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:28:58.797 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:29:26.462 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 18:29:26.466 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 18:29:26.466 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 18:29:26.468 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 18:29:26.472 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 18:29:26.472 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 18:29:26.476 -07:00 [DBG] Start discovery request
2019-05-30 18:29:26.533 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 18:29:26.537 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 18:29:26.537 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 18:29:26.540 -07:00 [DBG] Start authorize request
2019-05-30 18:29:26.552 -07:00 [DBG] No user present in authorize request
2019-05-30 18:29:26.560 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:29:26.581 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:29:26.587 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:29:26.617 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:29:26.634 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"011feb99b59c478ea0727752009616d5","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"011feb99b59c478ea0727752009616d5","code_challenge":"ULT5QLYcrpvyrk8kY0nyCNY3huReH0cqXJ9oQmbWwOQ","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 18:29:26.655 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 18:29:26.680 -07:00 [INF] Receive request from Authorization endpoint
2019-05-30 18:29:26.696 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:29:26.696 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:29:26.696 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:29:26.696 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:29:26.698 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:40:14.780 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:40:14.835 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:40:14.840 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:40:14.840 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:40:14.840 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:40:14.841 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:40:14.841 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:40:15.335 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:40:15.337 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:40:15.337 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:40:15.337 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:40:15.337 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:40:15.337 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:40:15.337 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:41:04.538 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 18:41:04.542 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 18:41:04.543 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 18:41:04.553 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 18:41:04.556 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 18:41:04.556 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 18:41:04.559 -07:00 [DBG] Start discovery request
2019-05-30 18:41:04.616 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 18:41:04.619 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 18:41:04.619 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 18:41:04.623 -07:00 [DBG] Start authorize request
2019-05-30 18:41:04.634 -07:00 [DBG] No user present in authorize request
2019-05-30 18:41:04.640 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:41:04.657 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:41:04.662 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:41:04.692 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:41:04.710 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"685230f5a94d46268e5923d2024e2b1b","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"685230f5a94d46268e5923d2024e2b1b","code_challenge":"Ule4tkFhfquB_tczW8TLtdQwvOF-U82KfRvT3xSek5g","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 18:41:04.731 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 18:41:04.755 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 18:41:04.768 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:41:04.769 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:41:04.769 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:41:04.769 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:41:04.771 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:41:26.621 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 18:49:38.213 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:49:38.257 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:49:38.262 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:49:38.262 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:49:38.262 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:49:38.262 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:49:38.262 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:49:38.813 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:49:38.815 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:49:38.815 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:49:38.815 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:49:38.815 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:49:38.815 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:49:38.815 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:50:08.249 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 18:50:08.253 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 18:50:08.253 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 18:50:08.255 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 18:50:08.258 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 18:50:08.258 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 18:50:08.263 -07:00 [DBG] Start discovery request
2019-05-30 18:50:08.348 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 18:50:08.352 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 18:50:08.352 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 18:50:08.357 -07:00 [DBG] Start authorize request
2019-05-30 18:50:08.368 -07:00 [DBG] No user present in authorize request
2019-05-30 18:50:08.373 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:50:08.391 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:50:08.396 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:50:08.429 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:50:08.446 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"a135194d6955494290ef6ff330e19ae3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"a135194d6955494290ef6ff330e19ae3","code_challenge":"MSwpnp50AFvosLmkMKTtICltqJc7xfr206CwOIOXt74","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 18:50:08.471 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 18:50:08.499 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 18:50:08.515 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:50:08.515 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:50:08.515 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:50:08.516 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:50:08.518 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:52:38.683 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:52:38.723 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:52:38.726 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:52:38.726 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:52:38.726 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:52:38.726 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:52:38.726 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:52:39.163 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:52:39.165 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:52:39.165 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:52:39.165 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:52:39.165 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:52:39.165 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:52:39.165 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:52:56.424 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 18:52:56.428 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 18:52:56.428 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 18:52:56.429 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 18:52:56.433 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 18:52:56.433 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 18:52:56.436 -07:00 [DBG] Start discovery request
2019-05-30 18:52:56.496 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 18:52:56.502 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 18:52:56.502 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 18:52:56.506 -07:00 [DBG] Start authorize request
2019-05-30 18:52:56.518 -07:00 [DBG] No user present in authorize request
2019-05-30 18:52:56.524 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:52:56.542 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:52:56.548 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:52:56.579 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:52:56.595 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"cdf1a48b5196495e92af6f9defccb1f8","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"cdf1a48b5196495e92af6f9defccb1f8","code_challenge":"mdxYeRM5IpWZXpVUnx2jo03WNBTDXoeDJOrByjNGVJA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 18:52:56.614 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 18:52:56.638 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 18:52:56.651 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:52:56.651 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:52:56.652 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:52:56.652 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:52:56.654 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:53:00.702 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 18:58:06.542 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 18:58:06.586 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 18:58:06.589 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 18:58:06.590 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 18:58:06.590 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 18:58:06.590 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 18:58:06.590 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 18:58:06.927 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 18:58:06.929 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 18:58:06.929 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 18:58:06.929 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 18:58:06.929 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 18:58:06.929 -07:00 [DBG] Error Url: /home/error
2019-05-30 18:58:06.929 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 18:58:17.033 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 18:58:17.037 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 18:58:17.037 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 18:58:17.039 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 18:58:17.042 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 18:58:17.042 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 18:58:17.045 -07:00 [DBG] Start discovery request
2019-05-30 18:58:17.113 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 18:58:17.120 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 18:58:17.120 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 18:58:17.124 -07:00 [DBG] Start authorize request
2019-05-30 18:58:17.133 -07:00 [DBG] No user present in authorize request
2019-05-30 18:58:17.138 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:58:17.156 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:58:17.162 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:58:17.195 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:58:17.213 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7434b13f6d1a45d0b5416e0df1fb0807","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"7434b13f6d1a45d0b5416e0df1fb0807","code_challenge":"Cl9pbrXGrgkYqrTgfMGmEhYQ_9jb5vTQdY63E7L0X58","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 18:58:17.235 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 18:58:17.273 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 18:58:17.284 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 18:58:17.285 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:58:17.285 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 18:58:17.285 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 18:58:17.288 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 18:58:21.259 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 19:05:56.912 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 19:05:56.955 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 19:05:56.957 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 19:05:56.957 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 19:05:56.957 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 19:05:56.958 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 19:05:56.958 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 19:05:57.542 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 19:05:57.544 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 19:05:57.544 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 19:05:57.544 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 19:05:57.544 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 19:05:57.544 -07:00 [DBG] Error Url: /home/error
2019-05-30 19:05:57.544 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 19:06:26.418 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 19:06:26.421 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 19:06:26.421 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 19:06:26.423 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 19:06:26.437 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 19:06:26.437 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 19:06:26.441 -07:00 [DBG] Start discovery request
2019-05-30 19:06:26.502 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 19:06:26.507 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 19:06:26.507 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 19:06:26.511 -07:00 [DBG] Start authorize request
2019-05-30 19:06:26.524 -07:00 [DBG] No user present in authorize request
2019-05-30 19:06:26.529 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 19:06:26.548 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:06:26.554 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 19:06:26.594 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 19:06:26.611 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"6eb987d4a0f34135a47258a4490bcbf8","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"6eb987d4a0f34135a47258a4490bcbf8","code_challenge":"DYt2IizgZsWk0PNLtSLfKdQFU4jR7Z5R6Xt-sNTzqEI","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 19:06:26.632 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 19:06:26.657 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 19:06:26.670 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 19:06:26.671 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:06:26.671 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 19:06:26.671 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 19:06:26.673 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:08:11.276 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 19:41:58.943 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 19:41:58.989 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 19:41:58.995 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 19:41:58.996 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 19:41:58.996 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 19:41:58.996 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 19:41:58.996 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 19:41:59.562 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 19:41:59.565 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 19:41:59.565 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 19:41:59.565 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 19:41:59.565 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 19:41:59.565 -07:00 [DBG] Error Url: /home/error
2019-05-30 19:41:59.565 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 19:42:12.924 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 19:42:12.932 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 19:42:12.932 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 19:42:12.934 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 19:42:12.938 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 19:42:12.939 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 19:42:12.942 -07:00 [DBG] Start discovery request
2019-05-30 19:42:12.998 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 19:42:13.003 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 19:42:13.003 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 19:42:13.007 -07:00 [DBG] Start authorize request
2019-05-30 19:42:13.017 -07:00 [DBG] No user present in authorize request
2019-05-30 19:42:13.023 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 19:42:13.045 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:42:13.049 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 19:42:13.082 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 19:42:13.101 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"8164f7f45c5f486aa6797232af198b19","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"8164f7f45c5f486aa6797232af198b19","code_challenge":"qy3tUaNqhMScQPG9ObEz-1D2BDyIyYNh4b3whi0svW0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 19:42:13.128 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 19:42:13.152 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 19:42:13.165 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 19:42:13.165 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:42:13.165 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 19:42:13.166 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 19:42:13.168 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:42:17.548 -07:00 [DBG] Receive request from Authorization endpoint
2019-05-30 19:55:53.269 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 19:55:53.343 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 19:55:53.346 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 19:55:53.346 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 19:55:53.346 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 19:55:53.346 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 19:55:53.346 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 19:55:53.972 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 19:55:53.975 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 19:55:53.976 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 19:55:53.976 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 19:55:53.976 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 19:55:53.976 -07:00 [DBG] Error Url: /home/error
2019-05-30 19:55:53.976 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 19:56:05.685 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 19:56:05.688 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 19:56:05.688 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 19:56:05.689 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 19:56:05.693 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 19:56:05.693 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 19:56:05.696 -07:00 [DBG] Start discovery request
2019-05-30 19:56:05.747 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 19:56:05.752 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 19:56:05.752 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 19:56:05.755 -07:00 [DBG] Start authorize request
2019-05-30 19:56:05.763 -07:00 [DBG] No user present in authorize request
2019-05-30 19:56:05.768 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 19:56:05.789 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:56:05.795 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 19:56:05.823 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 19:56:05.839 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"3840336315994e73a3576de376be7c99","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"3840336315994e73a3576de376be7c99","code_challenge":"eeTg33EdEORttGuMqTI7EdowFd1q-96ok0tDtJbh2NY","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 19:56:05.863 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 19:56:05.895 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 19:56:05.907 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 19:56:05.907 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:56:05.907 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 19:56:05.908 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 19:56:05.910 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 19:56:38.233 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 19:56:58.396 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:07:38.111 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 20:07:38.149 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 20:07:38.152 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 20:07:38.152 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 20:07:38.153 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 20:07:38.153 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 20:07:38.153 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 20:07:38.719 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 20:07:38.721 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 20:07:38.721 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 20:07:38.721 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 20:07:38.721 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 20:07:38.721 -07:00 [DBG] Error Url: /home/error
2019-05-30 20:07:38.721 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 20:07:45.576 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 20:07:45.579 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 20:07:45.580 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 20:07:45.581 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 20:07:45.587 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 20:07:45.587 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 20:07:45.590 -07:00 [DBG] Start discovery request
2019-05-30 20:07:45.643 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 20:07:45.648 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 20:07:45.648 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 20:07:45.652 -07:00 [DBG] Start authorize request
2019-05-30 20:07:45.660 -07:00 [DBG] No user present in authorize request
2019-05-30 20:07:45.665 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:07:45.685 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:07:45.690 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:07:45.721 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:07:45.738 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"4949aa5b47a0402494bbbb9d13dbb86e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"4949aa5b47a0402494bbbb9d13dbb86e","code_challenge":"cT7huMTTlrCDCEsvRY0N16RImFCQYLQoI0x1yLb3RXg","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 20:07:45.758 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 20:07:45.784 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:07:45.798 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:07:45.798 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:07:45.798 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:07:45.798 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:07:45.801 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:12:22.963 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 20:12:23.013 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 20:12:23.017 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 20:12:23.017 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 20:12:23.017 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 20:12:23.017 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 20:12:23.017 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 20:12:23.527 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 20:12:23.530 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 20:12:23.530 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 20:12:23.530 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 20:12:23.530 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 20:12:23.530 -07:00 [DBG] Error Url: /home/error
2019-05-30 20:12:23.530 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 20:12:30.357 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 20:12:30.361 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 20:12:30.362 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 20:12:30.363 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 20:12:30.367 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 20:12:30.368 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 20:12:30.371 -07:00 [DBG] Start discovery request
2019-05-30 20:12:30.429 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 20:12:30.433 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 20:12:30.433 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 20:12:30.436 -07:00 [DBG] Start authorize request
2019-05-30 20:12:30.446 -07:00 [DBG] No user present in authorize request
2019-05-30 20:12:30.451 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:12:30.471 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:12:30.476 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:12:30.505 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:12:30.526 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"f0992312caa84d2598c43c67ff6e0bfb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"f0992312caa84d2598c43c67ff6e0bfb","code_challenge":"-QVgDG9DD3nGOUFBlu3eqyBgB7s3XzE32Q82_9SqxRE","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 20:12:30.554 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 20:12:30.585 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:12:30.597 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:12:30.597 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:12:30.597 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:12:30.597 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:12:30.600 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:12:33.310 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 20:14:56.294 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 20:14:56.332 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 20:14:56.335 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 20:14:56.335 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 20:14:56.335 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 20:14:56.335 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 20:14:56.335 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 20:14:56.826 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 20:14:56.828 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 20:14:56.829 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 20:14:56.829 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 20:14:56.829 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 20:14:56.829 -07:00 [DBG] Error Url: /home/error
2019-05-30 20:14:56.829 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 20:15:03.801 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 20:15:03.813 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 20:15:03.813 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 20:15:03.815 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 20:15:03.820 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 20:15:03.820 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 20:15:03.824 -07:00 [DBG] Start discovery request
2019-05-30 20:15:03.879 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 20:15:03.884 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 20:15:03.884 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 20:15:03.893 -07:00 [DBG] Start authorize request
2019-05-30 20:15:03.902 -07:00 [DBG] No user present in authorize request
2019-05-30 20:15:03.908 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:15:03.926 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:15:03.932 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:15:03.965 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:15:03.980 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"397406808d154ec1b4b1738ff0a46119","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"397406808d154ec1b4b1738ff0a46119","code_challenge":"lhuK2uY3tVfdIEgES55ui7GOoBqBEFdcXJRF4qw4I1M","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 20:15:04.003 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 20:15:04.035 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:15:04.047 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:15:04.047 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:15:04.047 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:15:04.047 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:15:04.050 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:15:07.622 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:23:58.789 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 20:23:58.834 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 20:23:58.839 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 20:23:58.839 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 20:23:58.839 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 20:23:58.839 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 20:23:58.839 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 20:23:59.449 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 20:23:59.451 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 20:23:59.451 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 20:23:59.451 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 20:23:59.451 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 20:23:59.451 -07:00 [DBG] Error Url: /home/error
2019-05-30 20:23:59.451 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 20:24:15.428 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 20:24:15.434 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 20:24:15.434 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 20:24:15.438 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 20:24:15.442 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 20:24:15.442 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 20:24:15.447 -07:00 [DBG] Start discovery request
2019-05-30 20:24:15.511 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 20:24:15.515 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 20:24:15.515 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 20:24:15.518 -07:00 [DBG] Start authorize request
2019-05-30 20:24:15.533 -07:00 [DBG] No user present in authorize request
2019-05-30 20:24:15.539 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:24:15.556 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:24:15.562 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:24:15.594 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:24:15.610 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"44754516ba7a49a79b1178408d59f6df","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"44754516ba7a49a79b1178408d59f6df","code_challenge":"dF3nFe6YU083XivK7q_N-CLHAQFSe_anxD6xyKMNFMg","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 20:24:15.634 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 20:24:15.666 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:24:15.685 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:24:15.685 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:24:15.686 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:24:15.686 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:24:15.688 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:24:28.260 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:37:58.905 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 20:37:58.964 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 20:37:58.967 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 20:37:58.968 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 20:37:58.968 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 20:37:58.968 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 20:37:58.968 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 20:37:59.670 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 20:37:59.674 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 20:37:59.674 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 20:37:59.674 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 20:37:59.674 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 20:37:59.674 -07:00 [DBG] Error Url: /home/error
2019-05-30 20:37:59.674 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 20:38:04.568 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 20:38:04.573 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 20:38:04.573 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 20:38:04.574 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 20:38:04.578 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 20:38:04.578 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 20:38:04.582 -07:00 [DBG] Start discovery request
2019-05-30 20:38:04.643 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 20:38:04.647 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 20:38:04.647 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 20:38:04.650 -07:00 [DBG] Start authorize request
2019-05-30 20:38:04.659 -07:00 [DBG] No user present in authorize request
2019-05-30 20:38:04.665 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:38:04.685 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:38:04.691 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:38:04.720 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:38:04.738 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"c2285a9523fb46f7bc7c1604ab55ed60","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"c2285a9523fb46f7bc7c1604ab55ed60","code_challenge":"Z6zP_4X4k2nUu758IgTB85aKaiXSssDYSSZ0ORzmfsc","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 20:38:04.761 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 20:38:04.787 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:38:04.804 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:38:04.805 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:38:04.805 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:38:04.805 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:38:04.808 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:38:12.286 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 20:38:41.567 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 20:40:45.925 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 20:40:45.967 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 20:40:45.969 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 20:40:45.970 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 20:40:45.970 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 20:40:45.970 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 20:40:45.970 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 20:40:46.384 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 20:40:46.387 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 20:40:46.387 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 20:40:46.387 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 20:40:46.387 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 20:40:46.387 -07:00 [DBG] Error Url: /home/error
2019-05-30 20:40:46.387 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 20:40:54.951 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 20:40:54.955 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 20:40:54.955 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 20:40:54.956 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 20:40:54.960 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 20:40:54.960 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 20:40:54.966 -07:00 [DBG] Start discovery request
2019-05-30 20:40:55.030 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 20:40:55.034 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 20:40:55.035 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 20:40:55.038 -07:00 [DBG] Start authorize request
2019-05-30 20:40:55.050 -07:00 [DBG] No user present in authorize request
2019-05-30 20:40:55.055 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:40:55.076 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:40:55.081 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:40:55.112 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:40:55.128 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"394bf29bfe134a1481a72106adedec92","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"394bf29bfe134a1481a72106adedec92","code_challenge":"FncqQQX1UaO66M3Q2456aktbRO6Woe-2Cf6n1yJxlQs","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 20:40:55.150 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 20:40:55.175 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:40:55.194 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:40:55.194 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:40:55.194 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:40:55.194 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:40:55.197 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:40:58.045 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 20:40:58.093 -07:00 [DBG] Receive request from Login (GET): this might be request for user authetntication to this idp or cancel
2019-05-30 20:40:58.094 -07:00 [DBG] The request includes Form: {"Username":null,"Password":null,"RememberLogin":false,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=394bf29bfe134a1481a72106adedec92&code_challenge=FncqQQX1UaO66M3Q2456aktbRO6Woe-2Cf6n1yJxlQs&code_challenge_method=S256","$type":"LoginInputModel"}
2019-05-30 20:40:58.554 -07:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.UI_Views_Account_Login.<ExecuteAsync>b__8_1() in C:\Users\Satoshi\source\repos\idp_auth_pkce\src\IdentityServer\UI\Views\Account\Login.cshtml:line 18
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.UI_Views_Account_Login.ExecuteAsync()
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-05-30 20:48:19.910 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 20:48:19.952 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 20:48:19.955 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 20:48:19.955 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 20:48:19.956 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 20:48:19.956 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 20:48:19.956 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 20:48:20.412 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 20:48:20.416 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 20:48:20.416 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 20:48:20.416 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 20:48:20.416 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 20:48:20.416 -07:00 [DBG] Error Url: /home/error
2019-05-30 20:48:20.416 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 20:48:28.644 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 20:48:28.648 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 20:48:28.648 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 20:48:28.650 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 20:48:28.654 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 20:48:28.654 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 20:48:28.659 -07:00 [DBG] Start discovery request
2019-05-30 20:48:28.717 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 20:48:28.720 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 20:48:28.720 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 20:48:28.724 -07:00 [DBG] Start authorize request
2019-05-30 20:48:28.733 -07:00 [DBG] No user present in authorize request
2019-05-30 20:48:28.739 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:48:28.763 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:48:28.769 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:48:28.801 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:48:28.822 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"b1a11cd1cf314e4da758abab502fe173","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"b1a11cd1cf314e4da758abab502fe173","code_challenge":"LUIFQNtX9TPARNgVgHxZwtGl4Q0dP2Um7vJAFDaZqdc","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 20:48:28.843 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 20:48:28.876 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 20:48:28.890 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 20:48:28.890 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:48:28.890 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 20:48:28.890 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 20:48:28.892 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 20:48:32.339 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 20:48:32.391 -07:00 [DBG] Receive request from Login (GET): this might be request for user authetntication to this idp or cancel
2019-05-30 20:48:32.391 -07:00 [DBG] The request includes Form: {"Username":null,"Password":null,"RememberLogin":false,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=b1a11cd1cf314e4da758abab502fe173&code_challenge=LUIFQNtX9TPARNgVgHxZwtGl4Q0dP2Um7vJAFDaZqdc&code_challenge_method=S256","$type":"LoginInputModel"}
2019-05-30 20:48:32.490 -07:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.UI_Views_Account_Login.<ExecuteAsync>b__8_1() in C:\Users\Satoshi\source\repos\idp_auth_pkce\src\IdentityServer\UI\Views\Account\Login.cshtml:line 18
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.UI_Views_Account_Login.ExecuteAsync()
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-05-30 21:46:18.915 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 21:46:19.022 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 21:46:19.025 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 21:46:19.026 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 21:46:19.026 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 21:46:19.026 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 21:46:19.026 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 21:46:20.220 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 21:46:20.222 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 21:46:20.222 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 21:46:20.222 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 21:46:20.223 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 21:46:20.223 -07:00 [DBG] Error Url: /home/error
2019-05-30 21:46:20.223 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 21:46:24.350 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 21:46:24.372 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 21:46:24.373 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 21:46:24.375 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 21:46:24.389 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 21:46:24.389 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 21:46:24.417 -07:00 [DBG] Start discovery request
2019-05-30 21:46:24.937 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 21:46:24.942 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 21:46:24.942 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 21:46:24.946 -07:00 [DBG] Start authorize request
2019-05-30 21:46:25.110 -07:00 [DBG] No user present in authorize request
2019-05-30 21:46:25.121 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 21:46:25.142 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 21:46:25.149 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 21:46:25.187 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 21:46:25.206 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"149170a6d80444c9aa1598f5fdb8623c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"149170a6d80444c9aa1598f5fdb8623c","code_challenge":"kL3SUY53G_ssjmlDnWO6Oq1WopUDjXMoc_jKecloIxs","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 21:46:25.252 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 21:46:25.311 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 21:46:25.322 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 21:46:25.323 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 21:46:25.323 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 21:46:25.323 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 21:46:25.325 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 21:46:31.624 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 21:46:31.883 -07:00 [DBG] Receive request from Login (GET): this might be request for user authetntication to this idp or cancel
2019-05-30 21:46:31.883 -07:00 [DBG] The request includes Form: {"Username":"sdfs","Password":"sdfs","RememberLogin":false,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=149170a6d80444c9aa1598f5fdb8623c&code_challenge=kL3SUY53G_ssjmlDnWO6Oq1WopUDjXMoc_jKecloIxs&code_challenge_method=S256","$type":"LoginInputModel"}
2019-05-30 21:46:32.258 -07:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.UI_Views_Account_Login.<ExecuteAsync>b__25_1() in C:\Users\Satoshi\source\repos\idp_auth_pkce\src\IdentityServer\UI\Views\Account\Login.cshtml:line 18
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.UI_Views_Account_Login.ExecuteAsync()
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-05-30 21:46:46.568 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 21:46:46.569 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 21:46:46.570 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 21:46:46.570 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 21:46:46.570 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 21:46:46.570 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:00:05.827 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 22:00:05.864 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 22:00:05.868 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 22:00:05.868 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 22:00:05.868 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 22:00:05.868 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 22:00:05.868 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 22:00:06.286 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 22:00:06.288 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 22:00:06.288 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 22:00:06.288 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 22:00:06.288 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 22:00:06.288 -07:00 [DBG] Error Url: /home/error
2019-05-30 22:00:06.288 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 22:00:22.118 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 22:00:22.122 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 22:00:22.122 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 22:00:22.124 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 22:00:22.133 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 22:00:22.134 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 22:00:22.138 -07:00 [DBG] Start discovery request
2019-05-30 22:00:22.265 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 22:00:22.272 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 22:00:22.272 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 22:00:22.276 -07:00 [DBG] Start authorize request
2019-05-30 22:00:22.289 -07:00 [DBG] No user present in authorize request
2019-05-30 22:00:22.293 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:00:22.320 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:00:22.341 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:00:22.396 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:00:22.422 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"451a3270705c4d0cb415be653c2f6e4a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"451a3270705c4d0cb415be653c2f6e4a","code_challenge":"rTszbQirCFSIGBhXU2L2kvafMnaR5JyZOkeX6qipZ_0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 22:00:22.447 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 22:00:22.486 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 22:00:22.500 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:00:22.501 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:00:22.501 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:00:22.502 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:00:22.505 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:00:28.579 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 22:00:28.627 -07:00 [DBG] Receive request from Login (GET): this might be request for user authetntication to this idp or cancel
2019-05-30 22:00:28.627 -07:00 [DBG] The request includes Form: {"Username":"name","Password":"salkdjf","RememberLogin":false,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=451a3270705c4d0cb415be653c2f6e4a&code_challenge=rTszbQirCFSIGBhXU2L2kvafMnaR5JyZOkeX6qipZ_0&code_challenge_method=S256","$type":"LoginInputModel"}
2019-05-30 22:00:28.740 -07:00 [ERR] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.UI_Views_Account_Login.<ExecuteAsync>b__25_1() in C:\Users\Satoshi\source\repos\idp_auth_pkce\src\IdentityServer\UI\Views\Account\Login.cshtml:line 18
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.UI_Views_Account_Login.ExecuteAsync()
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-05-30 22:00:31.153 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 22:00:31.153 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:00:31.153 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:00:31.154 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:00:31.154 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:00:31.154 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:01:50.182 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 22:01:50.224 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 22:01:50.229 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 22:01:50.230 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 22:01:50.230 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 22:01:50.230 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 22:01:50.230 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 22:01:50.716 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 22:01:50.718 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 22:01:50.718 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 22:01:50.718 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 22:01:50.718 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 22:01:50.718 -07:00 [DBG] Error Url: /home/error
2019-05-30 22:01:50.718 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 22:02:04.185 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 22:02:04.188 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 22:02:04.188 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 22:02:04.190 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 22:02:04.194 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 22:02:04.194 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 22:02:04.198 -07:00 [DBG] Start discovery request
2019-05-30 22:02:04.248 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 22:02:04.253 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 22:02:04.253 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 22:02:04.256 -07:00 [DBG] Start authorize request
2019-05-30 22:02:04.265 -07:00 [DBG] No user present in authorize request
2019-05-30 22:02:04.270 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:02:04.292 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:02:04.297 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:02:04.334 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:02:04.355 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"215fa3637b594373b1c5d86565a1120f","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"215fa3637b594373b1c5d86565a1120f","code_challenge":"OWW4Q7GwgESQOu7_fSSzScX7MOxF_G68FAPtuE_j3tQ","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 22:02:04.380 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 22:02:04.413 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 22:02:04.426 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:02:04.426 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:02:04.426 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:02:04.426 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:02:04.429 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:48:29.198 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 22:48:29.247 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 22:48:29.249 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 22:48:29.249 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 22:48:29.249 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 22:48:29.249 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 22:48:29.250 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 22:48:30.271 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 22:48:30.272 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 22:48:30.272 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 22:48:30.272 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 22:48:30.272 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 22:48:30.272 -07:00 [DBG] Error Url: /home/error
2019-05-30 22:48:30.272 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 22:50:50.656 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 22:50:50.667 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 22:50:50.667 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 22:50:50.670 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 22:50:50.688 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 22:50:50.688 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 22:50:50.692 -07:00 [DBG] Start discovery request
2019-05-30 22:50:50.788 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 22:50:50.799 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 22:50:50.799 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 22:50:50.804 -07:00 [DBG] Start authorize request
2019-05-30 22:50:50.830 -07:00 [DBG] No user present in authorize request
2019-05-30 22:50:50.836 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:50:50.858 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:50:50.865 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:50:50.902 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:50:50.920 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"efca1cad6a804f4da64dd9cc4e146eaa","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"efca1cad6a804f4da64dd9cc4e146eaa","code_challenge":"hR5QTRD6pYj2V0Y43GOKPavK4BO_5EWSMPDFpbiJLCA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 22:50:50.947 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 22:50:50.997 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 22:50:51.021 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:50:51.021 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:50:51.021 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:50:51.021 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:50:51.025 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:50:56.154 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 22:50:56.265 -07:00 [DBG] Receive request from Login (GET): this might be request for user authetntication to this idp or cancel
2019-05-30 22:50:56.265 -07:00 [DBG] The request includes Form: {"Username":null,"Password":null,"RememberLogin":false,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=efca1cad6a804f4da64dd9cc4e146eaa&code_challenge=hR5QTRD6pYj2V0Y43GOKPavK4BO_5EWSMPDFpbiJLCA&code_challenge_method=S256","$type":"LoginInputModel"}
2019-05-30 22:50:56.265 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:50:56.266 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:50:56.266 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:50:56.266 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:50:56.266 -07:00 [DBG] Resource Owner clicked cancel button
2019-05-30 22:50:56.316 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:50:56.634 -07:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-05-30 22:50:56.635 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-05-30 22:50:56.635 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-05-30 22:50:56.647 -07:00 [DBG] Start authorize callback request
2019-05-30 22:50:56.669 -07:00 [DBG] No user present in authorize request
2019-05-30 22:50:56.669 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 22:50:56.669 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 22:50:56.669 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 22:50:56.670 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 22:50:56.670 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"efca1cad6a804f4da64dd9cc4e146eaa","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"efca1cad6a804f4da64dd9cc4e146eaa","code_challenge":"hR5QTRD6pYj2V0Y43GOKPavK4BO_5EWSMPDFpbiJLCA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 22:50:56.670 -07:00 [INF] Error: User denied consent
2019-05-30 22:50:56.675 -07:00 [INF] {"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"efca1cad6a804f4da64dd9cc4e146eaa","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"efca1cad6a804f4da64dd9cc4e146eaa","code_challenge":"hR5QTRD6pYj2V0Y43GOKPavK4BO_5EWSMPDFpbiJLCA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 23:41:28.679 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 23:41:28.679 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:41:28.679 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:41:28.679 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:41:28.680 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:41:28.680 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:41:32.124 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 23:41:32.126 -07:00 [DBG] Receive request from Login (GET): this might be request for user authetntication to this idp or cancel
2019-05-30 23:41:32.127 -07:00 [DBG] The request includes Form: {"Username":null,"Password":null,"RememberLogin":false,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=efca1cad6a804f4da64dd9cc4e146eaa&code_challenge=hR5QTRD6pYj2V0Y43GOKPavK4BO_5EWSMPDFpbiJLCA&code_challenge_method=S256","$type":"LoginInputModel"}
2019-05-30 23:41:32.127 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:41:32.127 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:41:32.127 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:41:32.127 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:41:32.127 -07:00 [DBG] Resource Owner clicked cancel button
2019-05-30 23:41:32.127 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:41:32.389 -07:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-05-30 23:41:32.390 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-05-30 23:41:32.390 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-05-30 23:41:32.390 -07:00 [DBG] Start authorize callback request
2019-05-30 23:41:32.391 -07:00 [DBG] No user present in authorize request
2019-05-30 23:41:32.391 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:41:32.391 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:41:32.391 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:41:32.391 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:41:32.391 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"efca1cad6a804f4da64dd9cc4e146eaa","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"efca1cad6a804f4da64dd9cc4e146eaa","code_challenge":"hR5QTRD6pYj2V0Y43GOKPavK4BO_5EWSMPDFpbiJLCA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 23:41:32.391 -07:00 [INF] Error: User denied consent
2019-05-30 23:41:32.391 -07:00 [INF] {"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"efca1cad6a804f4da64dd9cc4e146eaa","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"efca1cad6a804f4da64dd9cc4e146eaa","code_challenge":"hR5QTRD6pYj2V0Y43GOKPavK4BO_5EWSMPDFpbiJLCA","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 23:44:42.991 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 23:44:42.991 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 23:44:42.991 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 23:44:42.991 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 23:44:42.992 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 23:44:42.992 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 23:44:42.992 -07:00 [DBG] Start discovery request
2019-05-30 23:44:43.038 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 23:44:43.038 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 23:44:43.039 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 23:44:43.039 -07:00 [DBG] Start authorize request
2019-05-30 23:44:43.039 -07:00 [DBG] No user present in authorize request
2019-05-30 23:44:43.039 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:44:43.039 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:44:43.039 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:44:43.039 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:44:43.039 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"acd98d79549f4c75816bdcbbe89c8ebb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"acd98d79549f4c75816bdcbbe89c8ebb","code_challenge":"8kEiA0PQnc1U4mifyzsR0jJxr8b_i07kWo3i8bct_tU","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 23:44:43.039 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 23:44:43.059 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 23:44:43.059 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:44:43.059 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:44:43.060 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:44:43.060 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:44:43.060 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:44:58.468 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 23:44:58.469 -07:00 [DBG] Receive request from Login (GET): this might be request for user authetntication to this idp or cancel
2019-05-30 23:44:58.470 -07:00 [DBG] The request includes Form: {"Username":null,"Password":null,"RememberLogin":false,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=acd98d79549f4c75816bdcbbe89c8ebb&code_challenge=8kEiA0PQnc1U4mifyzsR0jJxr8b_i07kWo3i8bct_tU&code_challenge_method=S256","$type":"LoginInputModel"}
2019-05-30 23:44:58.470 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:44:58.471 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:44:58.471 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:44:58.472 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:44:58.472 -07:00 [DBG] Resource Owner clicked cancel button
2019-05-30 23:44:58.472 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:44:59.129 -07:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-05-30 23:44:59.132 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-05-30 23:44:59.132 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-05-30 23:44:59.132 -07:00 [DBG] Start authorize callback request
2019-05-30 23:44:59.133 -07:00 [DBG] No user present in authorize request
2019-05-30 23:44:59.133 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:44:59.133 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:44:59.133 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:44:59.133 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:44:59.133 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"acd98d79549f4c75816bdcbbe89c8ebb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"acd98d79549f4c75816bdcbbe89c8ebb","code_challenge":"8kEiA0PQnc1U4mifyzsR0jJxr8b_i07kWo3i8bct_tU","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 23:44:59.133 -07:00 [INF] Error: User denied consent
2019-05-30 23:44:59.133 -07:00 [INF] {"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"acd98d79549f4c75816bdcbbe89c8ebb","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"acd98d79549f4c75816bdcbbe89c8ebb","code_challenge":"8kEiA0PQnc1U4mifyzsR0jJxr8b_i07kWo3i8bct_tU","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 23:51:59.507 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-30 23:51:59.554 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-30 23:51:59.558 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-30 23:51:59.558 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-30 23:51:59.558 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-30 23:51:59.558 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-30 23:51:59.558 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-30 23:52:00.504 -07:00 [DBG] Login Url: /Account/Login
2019-05-30 23:52:00.507 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-30 23:52:00.507 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-30 23:52:00.507 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-30 23:52:00.507 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-30 23:52:00.507 -07:00 [DBG] Error Url: /home/error
2019-05-30 23:52:00.507 -07:00 [DBG] Error Id Parameter: errorId
2019-05-30 23:52:04.782 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-30 23:52:04.788 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-30 23:52:04.788 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-30 23:52:04.790 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-30 23:52:04.793 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-30 23:52:04.793 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-30 23:52:04.797 -07:00 [DBG] Start discovery request
2019-05-30 23:52:04.861 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-30 23:52:04.864 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-30 23:52:04.865 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-30 23:52:04.869 -07:00 [DBG] Start authorize request
2019-05-30 23:52:04.879 -07:00 [DBG] No user present in authorize request
2019-05-30 23:52:04.883 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:52:04.906 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:52:04.911 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:52:04.940 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:52:04.960 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7c0c87a0651747e584e925cc60e12907","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"7c0c87a0651747e584e925cc60e12907","code_challenge":"ghcXIJduDEO-5Ziu4sSM5QYGhNYC5dI4f1S9gkz5u6M","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 23:52:04.985 -07:00 [INF] Showing login: User is not authenticated
2019-05-30 23:52:05.028 -07:00 [DBG] Receive request from Authorization endpoint ===============
2019-05-30 23:52:05.043 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:52:05.043 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:52:05.043 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:52:05.044 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:52:05.046 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:52:12.928 -07:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-30 23:52:12.981 -07:00 [DBG] Receive request from Login (GET): this might be request for user authetntication to this idp or cancel
2019-05-30 23:52:12.981 -07:00 [DBG] The request includes Form: {"Username":"alice","Password":"password","RememberLogin":false,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=7c0c87a0651747e584e925cc60e12907&code_challenge=ghcXIJduDEO-5Ziu4sSM5QYGhNYC5dI4f1S9gkz5u6M&code_challenge_method=S256","$type":"LoginInputModel"}
2019-05-30 23:52:12.983 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:52:12.983 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:52:12.983 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:52:12.983 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:52:12.983 -07:00 [DBG] Resource Owner clicked login button
2019-05-30 23:52:13.006 -07:00 [DBG] Augmenting SignInContext
2019-05-30 23:52:13.010 -07:00 [DBG] Adding idp claim with value: local
2019-05-30 23:52:13.010 -07:00 [DBG] Adding amr claim with value: pwd
2019-05-30 23:52:13.051 -07:00 [INF] AuthenticationScheme: idsrv signed in.
2019-05-30 23:52:13.052 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:52:13.052 -07:00 [DBG] Client include PKCE so redirect to Redirect View 
2019-05-30 23:52:13.094 -07:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-05-30 23:52:13.094 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-05-30 23:52:13.095 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-05-30 23:52:13.101 -07:00 [DBG] Start authorize callback request
2019-05-30 23:52:13.105 -07:00 [DBG] User in authorize request: 1
2019-05-30 23:52:13.105 -07:00 [DBG] Start authorize request protocol validation
2019-05-30 23:52:13.105 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-30 23:52:13.105 -07:00 [DBG] Checking for PKCE parameters
2019-05-30 23:52:13.105 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-30 23:52:13.105 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"1","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"7c0c87a0651747e584e925cc60e12907","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b768fee3507a09a9cf44a59adcafd99e","Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"7c0c87a0651747e584e925cc60e12907","code_challenge":"ghcXIJduDEO-5Ziu4sSM5QYGhNYC5dI4f1S9gkz5u6M","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-30 23:52:13.107 -07:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-05-30 23:52:13.128 -07:00 [DBG] user_consent grant with value: spa.react|1 not found in store.
2019-05-30 23:52:13.129 -07:00 [DBG] Found no prior consent from consent store, consent is required
2019-05-30 23:52:13.129 -07:00 [INF] Showing consent: User has not yet consented
2019-05-31 01:12:04.355 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-31 01:12:04.398 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-31 01:12:04.401 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-31 01:12:04.401 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-31 01:12:04.401 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-31 01:12:04.401 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-31 01:12:04.401 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-31 01:12:04.981 -07:00 [DBG] Login Url: /Account/Login
2019-05-31 01:12:04.983 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-31 01:12:04.983 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-31 01:12:04.983 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-31 01:12:04.983 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-31 01:12:04.983 -07:00 [DBG] Error Url: /home/error
2019-05-31 01:12:04.983 -07:00 [DBG] Error Id Parameter: errorId
2019-05-31 01:12:18.493 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-31 01:12:18.509 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-31 01:12:18.509 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-31 01:12:18.511 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-31 01:12:18.515 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-31 01:12:18.515 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-31 01:12:18.519 -07:00 [DBG] Start discovery request
2019-05-31 01:12:18.603 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-31 01:12:18.607 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-31 01:12:18.607 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-31 01:12:18.612 -07:00 [DBG] Start authorize request
2019-05-31 01:12:18.624 -07:00 [DBG] User in authorize request: 1
2019-05-31 01:12:18.630 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:12:18.647 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:12:18.653 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:12:18.683 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:12:18.703 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"1","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"d81f9fd615a74679a597df6a11ce72c3","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b768fee3507a09a9cf44a59adcafd99e","Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"d81f9fd615a74679a597df6a11ce72c3","code_challenge":"QiEYRrDHkpDUxNO3ILokbFD7Wb00Ao2qXoIKmuOGHgo","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-31 01:12:18.729 -07:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-05-31 01:12:18.744 -07:00 [DBG] user_consent grant with value: spa.react|1 not found in store.
2019-05-31 01:12:18.744 -07:00 [DBG] Found no prior consent from consent store, consent is required
2019-05-31 01:12:18.744 -07:00 [INF] Showing consent: User has not yet consented
2019-05-31 01:12:18.782 -07:00 [DBG] Consent Index (GET) redirected from /Account/Login (POST) 
2019-05-31 01:12:18.795 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:12:18.795 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:12:18.795 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:12:18.795 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:12:18.797 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:12:57.452 -07:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-31 01:13:04.788 -07:00 [DBG] Consent Index (GET) redirected from /Account/Login (POST) 
2019-05-31 01:13:04.788 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:13:04.788 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:13:04.788 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:13:04.789 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:13:04.789 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:13:06.473 -07:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-31 01:13:11.003 -07:00 [DBG] Consent Index (GET) redirected from /Account/Login (POST) 
2019-05-31 01:13:11.004 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:13:11.004 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:13:11.004 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:13:11.004 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:13:11.004 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:13:14.087 -07:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-31 01:13:16.537 -07:00 [DBG] Consent Index (GET) redirected from /Account/Login (POST) 
2019-05-31 01:13:16.537 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:13:16.537 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:13:16.537 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:13:16.537 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:13:16.537 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:13:17.576 -07:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-31 01:13:18.830 -07:00 [DBG] Consent Index (GET) redirected from /Account/Login (POST) 
2019-05-31 01:13:18.830 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:13:18.830 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:13:18.830 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:13:18.830 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:13:18.830 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:55:18.103 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-05-31 01:55:18.169 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-05-31 01:55:18.172 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-05-31 01:55:18.172 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-05-31 01:55:18.172 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-05-31 01:55:18.172 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-05-31 01:55:18.172 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-05-31 01:55:18.719 -07:00 [DBG] Login Url: /Account/Login
2019-05-31 01:55:18.721 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-05-31 01:55:18.721 -07:00 [DBG] Logout Url: /Account/Logout
2019-05-31 01:55:18.722 -07:00 [DBG] ConsentUrl Url: /consent
2019-05-31 01:55:18.722 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-05-31 01:55:18.722 -07:00 [DBG] Error Url: /home/error
2019-05-31 01:55:18.722 -07:00 [DBG] Error Id Parameter: errorId
2019-05-31 01:55:28.226 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-31 01:55:28.236 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-31 01:55:28.236 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-31 01:55:28.243 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-31 01:55:28.248 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-31 01:55:28.249 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-31 01:55:28.253 -07:00 [DBG] Start discovery request
2019-05-31 01:55:28.344 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-31 01:55:28.350 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-31 01:55:28.350 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-31 01:55:28.354 -07:00 [DBG] Start authorize request
2019-05-31 01:55:28.389 -07:00 [DBG] User in authorize request: 1
2019-05-31 01:55:28.395 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:55:28.414 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:55:28.421 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:55:28.456 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:55:28.491 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"1","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e89b2e7e8e894a8a8c44c6280583dd7e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b768fee3507a09a9cf44a59adcafd99e","Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"e89b2e7e8e894a8a8c44c6280583dd7e","code_challenge":"2minMe-oHl-xvau2iPqZCoaTq2r02KRk8uyDJ45xbWM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-31 01:55:28.523 -07:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-05-31 01:55:28.538 -07:00 [DBG] user_consent grant with value: spa.react|1 not found in store.
2019-05-31 01:55:28.538 -07:00 [DBG] Found no prior consent from consent store, consent is required
2019-05-31 01:55:28.538 -07:00 [INF] Showing consent: User has not yet consented
2019-05-31 01:55:28.578 -07:00 [DBG] Consent Index (GET) redirected from /Account/Login (POST) 
2019-05-31 01:55:28.589 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:55:28.590 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:55:28.590 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:55:28.590 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:55:28.591 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:55:33.481 -07:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-05-31 01:55:33.591 -07:00 [DBG] Receive postback from Consent/Index (GET) View 
2019-05-31 01:55:33.591 -07:00 [DBG] Consent Input Form Values: {"Button":"yes","ScopesConsented":["openid"],"RememberConsent":true,"ReturnUrl":"/connect/authorize/callback?client_id=spa.react&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2Fcallback&response_type=code&scope=openid&state=e89b2e7e8e894a8a8c44c6280583dd7e&code_challenge=2minMe-oHl-xvau2iPqZCoaTq2r02KRk8uyDJ45xbWM&code_challenge_method=S256","$type":"ConsentInputModel"}
2019-05-31 01:55:33.593 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:55:33.593 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:55:33.593 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:55:33.593 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:55:33.643 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:55:33.927 -07:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-05-31 01:55:33.928 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-05-31 01:55:33.928 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-05-31 01:55:33.937 -07:00 [DBG] Start authorize callback request
2019-05-31 01:55:33.944 -07:00 [DBG] User in authorize request: 1
2019-05-31 01:55:33.944 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 01:55:33.944 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 01:55:33.944 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 01:55:33.944 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 01:55:33.944 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"1","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"e89b2e7e8e894a8a8c44c6280583dd7e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b768fee3507a09a9cf44a59adcafd99e","Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"e89b2e7e8e894a8a8c44c6280583dd7e","code_challenge":"2minMe-oHl-xvau2iPqZCoaTq2r02KRk8uyDJ45xbWM","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-31 01:55:33.944 -07:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-05-31 01:55:33.945 -07:00 [DBG] user_consent grant with value: spa.react|1 not found in store.
2019-05-31 01:55:33.945 -07:00 [DBG] Found no prior consent from consent store, consent is required
2019-05-31 01:55:33.951 -07:00 [INF] User consented to scopes: ["openid"]
2019-05-31 01:55:33.953 -07:00 [DBG] User indicated to remember consent for scopes: ["openid"]
2019-05-31 01:55:33.957 -07:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 1
2019-05-31 01:55:33.976 -07:00 [DBG] Creating Authorization Code Flow response.
2019-05-31 01:55:34.006 -07:00 [INF] Authorize endpoint response
{"SubjectId":"1","ClientId":"spa.react","RedirectUri":"http://localhost:8080/callback","State":"e89b2e7e8e894a8a8c44c6280583dd7e","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-05-31 01:55:34.055 -07:00 [DBG] Augmenting SignInContext
2019-05-31 01:55:34.072 -07:00 [INF] AuthenticationScheme: idsrv signed in.
2019-05-31 02:13:10.488 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-31 02:13:10.488 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-31 02:13:10.488 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-31 02:13:10.488 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-31 02:13:10.489 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-31 02:13:10.489 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-31 02:13:10.489 -07:00 [DBG] Start discovery request
2019-05-31 02:13:10.549 -07:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-05-31 02:13:10.549 -07:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-05-31 02:13:10.549 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-05-31 02:13:10.549 -07:00 [DBG] Start authorize request
2019-05-31 02:13:10.549 -07:00 [DBG] User in authorize request: 1
2019-05-31 02:13:10.549 -07:00 [DBG] Start authorize request protocol validation
2019-05-31 02:13:10.549 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 02:13:10.549 -07:00 [DBG] Checking for PKCE parameters
2019-05-31 02:13:10.549 -07:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-05-31 02:13:10.550 -07:00 [INF] ValidatedAuthorizeRequest
{"ClientId":"spa.react","ClientName":null,"RedirectUri":"http://localhost:8080/callback","AllowedRedirectUris":["http://localhost:8080/callback"],"SubjectId":"1","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid","State":"28050745c8aa42b9b6cd1fb6581683f7","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b768fee3507a09a9cf44a59adcafd99e","Raw":{"client_id":"spa.react","redirect_uri":"http://localhost:8080/callback","response_type":"code","scope":"openid","state":"28050745c8aa42b9b6cd1fb6581683f7","code_challenge":"bVMSn1QJ8MoUykMvGnN7HIrK2I2XwS7FaPosFEBnUNE","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2019-05-31 02:13:10.550 -07:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-05-31 02:13:10.554 -07:00 [DBG] Consent found in consent store is same as current request, consent is not required
2019-05-31 02:13:10.554 -07:00 [DBG] Creating Authorization Code Flow response.
2019-05-31 02:13:10.563 -07:00 [INF] Authorize endpoint response
{"SubjectId":"1","ClientId":"spa.react","RedirectUri":"http://localhost:8080/callback","State":"28050745c8aa42b9b6cd1fb6581683f7","Scope":"openid","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-05-31 02:13:11.650 -07:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8080
2019-05-31 02:13:11.651 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-31 02:13:11.651 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-31 02:13:11.651 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-05-31 02:13:11.651 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-05-31 02:13:11.651 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-05-31 02:13:11.651 -07:00 [DBG] Start discovery request
2019-05-31 02:13:11.789 -07:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8080
2019-05-31 02:13:11.791 -07:00 [DBG] Client list checked and origin: http://localhost:8080 is allowed
2019-05-31 02:13:11.791 -07:00 [DBG] CorsPolicyService allowed origin: http://localhost:8080
2019-05-31 02:13:11.792 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-05-31 02:13:11.800 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-05-31 02:13:11.800 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-05-31 02:13:11.821 -07:00 [DBG] Start token request.
2019-05-31 02:13:11.829 -07:00 [DBG] Start client validation
2019-05-31 02:13:11.835 -07:00 [DBG] Start parsing Basic Authentication secret
2019-05-31 02:13:11.839 -07:00 [DBG] Start parsing for secret in post body
2019-05-31 02:13:11.904 -07:00 [DBG] client id without secret found
2019-05-31 02:13:11.906 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-05-31 02:13:11.907 -07:00 [DBG] Secret id found: spa.react
2019-05-31 02:13:11.921 -07:00 [DBG] client configuration validation for client spa.react succeeded.
2019-05-31 02:13:11.955 -07:00 [DBG] Hashed shared secret validator cannot process NoSecret
2019-05-31 02:13:11.956 -07:00 [DBG] Secret validators could not validate secret
2019-05-31 02:13:11.956 -07:00 [ERR] Client secret validation failed for client: spa.react.
